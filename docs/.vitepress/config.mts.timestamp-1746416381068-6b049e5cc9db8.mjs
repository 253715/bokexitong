// docs/.vitepress/config.mts
import { defineConfig } from "file:///D:/%E8%BF%85%E9%9B%B7%E4%B8%8B%E8%BD%BD/blog/my-blog/boke/node_modules/vitepress/dist/node/index.js";

// docs/.vitepress/blog-theme.ts
import { getThemeConfig } from "file:///D:/%E8%BF%85%E9%9B%B7%E4%B8%8B%E8%BD%BD/blog/my-blog/boke/node_modules/@sugarat/theme/node.mjs";
var blogTheme = getThemeConfig({
  // ÂºÄÂêØRSSÊîØÊåÅ
  // RSS,
  // ÊêúÁ¥¢
  // ÈªòËÆ§ÂºÄÂêØpagefindÁ¶ªÁ∫øÁöÑÂÖ®ÊñáÊêúÁ¥¢ÊîØÊåÅÔºàÂ¶Ç‰ΩøÁî®ÂÖ∂ÂÆÉÁöÑÂèØ‰ª•ËÆæÁΩÆ‰∏∫falseÔºâ
  // search: false,
  // markdown ÂõæË°®ÊîØÊåÅÔºà‰ºöÂ¢ûÂä†‰∏ÄÂÆöÁöÑÊûÑÂª∫ËÄóÊó∂Ôºâ
  // mermaid: true
  // È°µËÑö
  footer: {
    // message Â≠óÊÆµÊîØÊåÅÈÖçÁΩÆ‰∏∫HTMLÂÜÖÂÆπÔºåÈÖçÁΩÆÂ§öÊù°ÂèØ‰ª•ÈÖçÁΩÆ‰∏∫Êï∞ÁªÑ
    // message: '‰∏ãÈù¢ ÁöÑÂÜÖÂÆπÂíåÂõæÊ†áÈÉΩÊòØÂèØ‰ª•‰øÆÊîπÁöÑÂô¢ÔºàÂΩìÁÑ∂Êú¨Êù°ÂÜÖÂÆπ‰πüÊòØÂèØ‰ª•ÈöêËóèÁöÑÔºâ',
    copyright: "MIT License | JonQuet"
    // icpRecord: {
    //   name: 'ËúÄICPÂ§á19011724Âè∑',
    //   link: 'https://beian.miit.gov.cn/'
    // },
    // securityRecord: {
    //   name: 'ÂÖ¨ÁΩëÂÆâÂ§áxxxxx',
    //   link: 'https://www.beian.gov.cn/portal/index.do'
    // },
  },
  // ‰∏ªÈ¢òËâ≤‰øÆÊîπ
  themeColor: "el-blue",
  // ÊñáÁ´†ÈªòËÆ§‰ΩúËÄÖ
  author: "JonQuet",
  // ÂèãÈìæ
  friend: [
    {
      nickname: "\u7CA5\u91CC\u6709\u52FA\u7CD6",
      des: "\u4F60\u7684\u6307\u5C16\u7528\u4E8E\u6539\u53D8\u4E16\u754C\u7684\u529B\u91CF",
      avatar: "https://img.cdn.sugarat.top/mdImg/MTY3NDk5NTE2NzAzMA==674995167030",
      url: "https://sugarat.top"
    },
    {
      nickname: "Vitepress",
      des: "Vite & Vue Powered Static Site Generator",
      avatar: "https://vitepress.dev/vitepress-logo-large.webp",
      url: "https://vitepress.dev/"
    }
  ],
  // ÂÖ¨Âëä
  popover: {
    title: "\u516C\u544A",
    body: [
      // { type: 'text', content: 'üëáÂÖ¨‰ºóÂè∑üëá---üëá ÂæÆ‰ø° üëá' },
      // {
      //   type: 'image',
      //   src: 'https://img.cdn.sugarat.top/mdImg/MTYxNTAxODc2NTIxMA==615018765210~fmt.webp'
      // },
      // {
      //   type: 'text',
      //   content: 'Ê¨¢ËøéÂ§ßÂÆ∂Âä†Áæ§&ÁßÅ‰ø°‰∫§ÊµÅ'
      // },
      // {
      //   type: 'text',
      //   content: 'ÊñáÁ´†È¶ñ/ÊñáÂ∞æÊúâÁæ§‰∫åÁª¥Á†Å',
      //   style: 'padding-top:0'
      // },
      // {
      //   type: 'button',
      //   content: '‰ΩúËÄÖÂçöÂÆ¢',
      //   link: 'https://www.xiaokaizrk.cn/'
      // },
      // {
      //   type: 'button',
      //   content: 'Âä†Áæ§‰∫§ÊµÅ',
      //   props: {
      //     type: 'success'
      //   },
      //   link: 'https://theme.sugarat.top/group.html',
      // }
      { type: "text", content: "\u8BB0\u5F55\u4E00\u4E0B\u81EA\u5DF1\u5B66\u4E60\u7684\u5185\u5BB9" }
    ],
    duration: 0
  },
  // ÁúãÊùøÂ®ò
  oml2d: {
    mobileDisplay: true,
    models: [
      {
        path: "https://registry.npmmirror.com/oml2d-models/latest/files/models/Senko_Normals/senko.model3.json"
      }
    ]
  },
  // ËØÑËÆ∫
  comment: {
    type: "giscus",
    options: {
      repo: "ATQQ/sugar-blog",
      repoId: "MDEwOlJlcG9zaXRvcnkyNDEyNDUyOTk",
      category: "Announcements",
      categoryId: "DIC_kwDODmEcc84COVc6",
      inputPosition: "top"
    },
    mobileMinify: true
  }
});

// docs/.vitepress/config.mts
var config_default = defineConfig({
  // ÁªßÊâøÂçöÂÆ¢‰∏ªÈ¢ò(@sugarat/theme)
  extends: blogTheme,
  // Á´ôÁÇπÂú∞Âõæ
  sitemap: {
    hostname: "https://www.xiaokaizrk.cn/"
  },
  // base,
  lang: "zh-cn",
  title: "\u7231\u5B66\u4E60\u7684\u5C0F\u51EF",
  description: "\u4ECE\u6765\u6CA1\u6709\u771F\u6B63\u7684\u7EDD\u5883\uFF0C\u53EA\u6709\u5FC3\u7075\u7684\u8FF7\u9014",
  lastUpdated: true,
  // ËØ¶ËßÅÔºöhttps://vitepress.dev/zh/reference/site-config#head
  head: [
    // ÈÖçÁΩÆÁΩëÁ´ôÁöÑÂõæÊ†áÔºàÊòæÁ§∫Âú®ÊµèËßàÂô®ÁöÑ tab ‰∏äÔºâ
    // ['link', { rel: 'icon', href: `${base}favicon.ico` }], // ‰øÆÊîπ‰∫Ü base ËøôÈáå‰πüÈúÄË¶ÅÂêåÊ≠•‰øÆÊîπ
    ["link", { rel: "icon", href: "/favicon.ico" }]
  ],
  themeConfig: {
    // Â±ïÁ§∫ 2,3 Á∫ßÊ†áÈ¢òÂú®ÁõÆÂΩï‰∏≠
    outline: {
      level: [2, 3],
      label: "\u76EE\u5F55"
    },
    // ÈªòËÆ§ÊñáÊ°à‰øÆÊîπ
    returnToTopLabel: "\u56DE\u5230\u9876\u90E8",
    sidebarMenuLabel: "\u76F8\u5173\u6587\u7AE0",
    lastUpdatedText: "\u4E0A\u6B21\u66F4\u65B0\u4E8E",
    docFooter: {
      prev: "\u4E0A\u4E00\u7BC7",
      next: "\u4E0B\u4E00\u7BC7"
    },
    // ËÆæÁΩÆlogo
    logo: "/logo.png",
    // editLink: {
    //   pattern:
    //     'https://github.com/ATQQ/sugar-blog/tree/master/packages/blogpress/:path',
    //   text: 'Âéª GitHub ‰∏äÁºñËæëÂÜÖÂÆπ'
    // },
    nav: [
      { text: "\u9996\u9875", link: "/" },
      { text: "\u5BFC\u822A\u9875", link: "/nav/index.html" },
      {
        text: "Java",
        items: [
          { text: "Java\u5B66\u4E60\u8DEF\u7EBF", link: "/Java\u5B66\u4E60/\u540E\u7AEF/Java\u5B66\u4E60" },
          { text: "SpringBoot", link: "/Java\u5B66\u4E60/\u540E\u7AEF/SpringBoot/SpringBoot" },
          { text: "Vue", link: "/Java\u5B66\u4E60/\u540E\u7AEF/SpringBoot/SpringBoot" },
          { text: "Java\u9879\u76EE\u5B9E\u6218", link: "/Java\u5B66\u4E60/\u9879\u76EE\u5B9E\u6218/\u9879\u76EE\u5B9E\u6218" }
        ]
      },
      {
        text: "\u5927\u6570\u636E",
        items: [
          { text: "\u5927\u6570\u636E\u5B66\u4E60\u8DEF\u7EBF", link: "/Java\u5B66\u4E60/\u540E\u7AEF/Java\u5B66\u4E60" },
          { text: "\u9879\u76EE\u5B9E\u6218", link: "/Java\u5B66\u4E60/\u540E\u7AEF/SpringBoot/SpringBoot" }
        ]
      },
      {
        text: "Python",
        items: [
          { text: "Python\u5B66\u4E60\u8DEF\u7EBF", link: "/Java\u5B66\u4E60/\u540E\u7AEF/Java\u5B66\u4E60" },
          { text: "\u722C\u866B", link: "/Java\u5B66\u4E60/\u540E\u7AEF/SpringBoot/SpringBoot" }
        ]
      },
      { text: "JonQuet", link: "/about/" }
    ],
    socialLinks: [
      {
        icon: "github",
        link: "https://github.com/253715/bokexitong"
      }
    ]
  }
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
